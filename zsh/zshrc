# Path to your oh-my-zsh configuration.

ZSH=$HOME/.oh-my-zsh
#ZSH_CUSTOM=$HOME/.themes
ZSH_THEME="kalhauge"

DISABLE_AUTO_UPDATE="true"
COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git archlinux cabal nix)

source $ZSH/oh-my-zsh.sh

#chuck_cow

## MY CHANGES

[ -f ~/.profile ] && source ~/.profile

# bindkey -v

# Enable fasd
eval "$(fasd --init auto)"

texit() {
   pdflatex -draftmode $1.tex &&
   bibtex $1 &&
   pdflatex -draftmode $1.tex &&
   pdflatex $1.tex && open report.pdf
}

alias -s sh=/bin/bash

# Global helpers
alias -g myip=`echo $LOCAL_IP`

# systemem

alias sctl=systemctl

# Functions
unset GREP_OPTIONS

autoload -Uz promptinit
promptinit -i
if [[ $1 == eval ]]
then
   "$@"
   set --
fi


bindkey '^P' up-history
bindkey '^N' down-history
bindkey '^?' backward-delete-char
bindkey '^h' backward-delete-char
bindkey '^w' backward-kill-word
bindkey '^r' history-incremental-search-backward


setopt SHARE_HISTORY
setopt HIST_IGNORE_SPACE
setopt HIST_IGNORE_DUPS
setopt HIST_NO_STORE
setopt INC_APPEND_HISTORY_TIME
setopt EXTENDED_HISTORY

HISTFILESIZE=1000000
HISTSIZE=1000000

HISTIGNORE="ll:ls:fg:bg"
HISTORY_IGNORE="(ls|ll|l|fg|bg|cd)"


export KEYTIMEOUT=1

itprofile () {
    echo -n -e "\033]50;SetProfile=$1\a"
}

# precmd () {
#     local hours=$(date +%H);
#     if [[ $hours > 8 ]] & [[ $hours < 18 ]]; then
#         itprofile Light
#     else 
#         itprofile Dark
#     fi
# }

# Environmet

export NIX_PATH=mypkgs=$HOME/Develop/configs/environments/:$NIX_PATH
alias env="nix-shell '<mypkgs>' -A"

alias hp='nix-env -f "<nixpkgs>" -qaP -A haskellPackages'

export VISUAL=nvim
export EDITOR="$VISUAL"

# Nix help

nix-search () { 
    echo "Searching...";
    nix-env -qaP --description '*' | grep -i "$1"; 
}

nix-i () { nix-env -iA $1; } 

. ~/.helpers.zsh

# Task Warrior

# alias t=task
# 
# alias in='task add +in'
# 
# tickle () {
#     deadline=$1
#     shift
#     in +tickle wait:$deadline $@
# }
# alias tick=tickle
# 
# cancel () { 
#     n=$1
#     shift
#     task $n annotate +canceled $@
#     task $n done
# }
# 
# delegate () { 
#     n=$1
#     date=$2
#     shift; shift
#     task $n annotate +delegated wait:$date $@
# }
# alias dele=delegate
# 
# task_modify () {
#     n=$1
#     shift;
#     task $n modify $@
# }
# alias tm=task_modify
# 
# note () { 
#     n=$1
#     shift
#     task $n annotate $@
# }
# 
# subtask () { 
#     n=$1
#     shift
#     m=$(task $n duplicate depends: | sed -n "s/Created task \([0-9][0-9]*\)\./\1/p")
#     task $m modify $@ > /dev/null
#     echo "Task $m created"
#     task $n modify depends:$m > /dev/null
# }
# 

take () { 
    pv -l -s $1 | head -n $1
}

remote () {
    ssh $1 -t "tmux attach || tmux new"
}

tab () {
    cut -d, -f $2 $1 | head -n $3 | column -ts, 
}

show_spinner()
{
  local -r pid="${1}"
  local -r delay='0.20'
  local spinstr='\|/-'
  local temp
  local N=$(date +%s)
  while ps a | awk '{print $1}' | grep -q "${pid}"; do
    temp="${spinstr#?}"
    printf " [% 3ds] [%c]  " "$(($(date +%s) - $N))" "${spinstr}"
    spinstr=${temp}${spinstr%"${temp}"}
    printf "\b\b\b\b\b\b\b\b\b\b\b\b\b"
    sleep "${delay}"
  done
  printf "    \b\b\b\b\b\b\b\b\b\b"
}

spinner ()
{
    read < <( "$@" & echo $! ) 
    show_spinner "$REPLY"
}

m () {  
    if [[ "$1" == "!" ]]
    then
        shift
        spinner offlineimap -qf INBOX -u quiet
    fi
    neomutt $@
}

alias m!='m !'
alias mz='m ! -z'
alias mZ='m ! -Z'
alias mp='m -p'
alias ma='m -f +gmail/archive'

alias vim='nvim'

alias rbora='remote rbora'
alias rtupai='remote rtupai'
alias rmopelia='remote rmopelia'
alias rhuahine='remote rhuahine'
alias rebtl='remote ebtl'

alias na='notr agenda'

# Colors

LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.axv=01;35:*.anx=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.axa=00;36:*.oga=00;36:*.spx=00;36:*.xspf=00;36:';
export LS_COLORS

diary () {
    fld="~/Dropbox/Journal/$(date +"%Y/%m/%d")"
    mkdir -p "$fld"
    FILE="$fld/diary.mkd"
    echo -n "# " > "$FILE"
    date >> "$FILE" 
    vim "$FILE"
}

alias em='if ! ps aux | grep "emacs --bg-daemon" | grep -v grep > /dev/null; then emacs --daemon; fi && emacsclient -c -nw'

attach () {
    NAME=$(basename $PWD)
    tmux attach -t "$NAME" || tmux new -s "$NAME"
}

diffjavap () {
    vimdiff <(javap -v -p -cp $2 $1) <(javap -v -p -cp $3 $1)
}

nixhs () {
    nix-shell -E '(import <nixpkgs> {}).haskellPackages.callPackage ./default.nix'
}


